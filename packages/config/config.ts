import { env } from "./env";

// ---------- HELPERS ----------
/** Determine which stage (environment the app is running in) */
const stage =
  // The backend uses env?.STAGE (generated by sst)
  env?.STAGE ||
  // The frontend (deployed) uses NEXT_PUBLIC_STAGE (set inside website stack)
  process.env.NEXT_PUBLIC_STAGE;

// If we still don't have stage, something went wrong
if (!stage)
  throw new Error(
    "[config] Stage not found - check your environment variables.",
  );

/** Determine if we're running against production resources */
let isProd = false;
// Prod should both use prod resources
if (stage === "prod" || stage === "staging") {
  isProd = true;
}

/** Whether this application is running as one of our main deployments (not locally) */
const isDeployment = ["prod", "dev"].includes(stage ?? "");

// ---------- MAIN CONFIG ----------
/** The configuration object that defines global settings for the app */
export const config = {
  /** The overall stage the application is running in */
  stage,
  /** Whether this application is running as one of our main deployments (not locally) */
  isDeployment,
  /** Whether the application is using production resources */
  isProd,
  /** Some details regarding the project */
  app: {
    /** The name of the project */
    name: "My App",
    /** The url of the project */
    url: process.env.NEXT_PUBLIC_APP_URL,
  },
  /** The configuration for PostHog */
  posthog: {
    /** The PostHog API key */
    apiKey: isProd ? "" : "",
  },
  /** Details for our backend API */
  api: {
    /** The URL of our own API */
    url: process.env.NEXT_PUBLIC_API_URL,
  },
};
